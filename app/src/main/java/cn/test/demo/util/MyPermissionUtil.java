package cn.test.demo.util;import android.app.Activity;import android.content.Intent;import android.net.Uri;import android.os.Build;import androidx.annotation.NonNull;import androidx.appcompat.app.AlertDialog;import java.util.Arrays;import java.util.List;import cn.test.manage.R;import pub.devrel.easypermissions.EasyPermissions;/** * Created by Sam on  2021-12-06  14:35 * Describe: * <p> * * 声明一些常亮， * * <p> * * 处理 打开系统设置的操作 */public class MyPermissionUtil {    public static final int RQ_CAMERA_PERMISSIONS = 99;    public static final int ACCESS_COARSE_LOCATION = 88;    public static final int CALL_PHONE = 66;    private static AlertDialog alertDialog;    public static final int READ_WRITE_EXTERNAL_STORAGE = 77;    public static void onCallbackPermissionsDenied(final Activity activity, @NonNull List<String> perms, final NegativeButtonOnClickListener onClickListener, String... permissionName) {        /**         * 若是在权限弹窗中，用户勾选了'不在提示'，且拒绝权限。         * 这时候，需要跳转到设置界面去，让用户手动开启。         */        if (alertDialog != null) {            alertDialog.dismiss();            alertDialog = null;        }        if (EasyPermissions.somePermissionPermanentlyDenied(activity, perms)) {            String messageHint = activity.getResources().getString(R.string.apply_permission_dialog_message_hint);            String message = String.format(messageHint, Arrays.asList(permissionName));            //添加取消            alertDialog = new AlertDialog.Builder(activity)                    .setTitle(R.string.apply_permission_dialog_title_hint)                    .setMessage(message)                    .setIcon(R.mipmap.ic_launcher)                    .setCancelable(false)                    .setPositiveButton(R.string.confirm, (dialogInterface, i) -> {                        //添加"Yes"按钮                        getAppDetailSettingIntent(activity);                    })                    .setNegativeButton(R.string.cancel, (dialogInterface, i) -> {                        if (onClickListener != null) {                            onClickListener.onClick();                        }                    })                    .create();            alertDialog.show();        }    }    //跳转应用详情    private static void getAppDetailSettingIntent(Activity activity) {        Intent localIntent = new Intent();        localIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);        if (Build.VERSION.SDK_INT >= 9) {            localIntent.setAction("android.settings.APPLICATION_DETAILS_SETTINGS");            localIntent.setData(Uri.fromParts("package", activity.getPackageName(), null));        } else if (Build.VERSION.SDK_INT <= 8) {// 8 --android 4.42            localIntent.setAction(Intent.ACTION_VIEW);            localIntent.setClassName("com.android.settings", "com.android.settings.InstalledAppDetails");            localIntent.putExtra("com.android.settings.ApplicationPkgName", activity.getPackageName());        }        activity.startActivity(localIntent);    }    public interface NegativeButtonOnClickListener {        void onClick();    }}